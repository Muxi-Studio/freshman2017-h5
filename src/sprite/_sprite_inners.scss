// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$only-sun-name: 'onlySun';
$only-sun-x: 0px;
$only-sun-y: 0px;
$only-sun-offset-x: 0px;
$only-sun-offset-y: 0px;
$only-sun-width: 53px;
$only-sun-height: 26px;
$only-sun-total-width: 686px;
$only-sun-total-height: 1135px;
$only-sun-image: '../sprite/sprite_inners.jpg';
$only-sun: (0px, 0px, 0px, 0px, 53px, 26px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'onlySun', );
$question-right-ring-name: 'question-right-ring';
$question-right-ring-x: 0px;
$question-right-ring-y: 26px;
$question-right-ring-offset-x: 0px;
$question-right-ring-offset-y: -26px;
$question-right-ring-width: 71px;
$question-right-ring-height: 75px;
$question-right-ring-total-width: 686px;
$question-right-ring-total-height: 1135px;
$question-right-ring-image: '../sprite/sprite_inners.jpg';
$question-right-ring: (0px, 26px, 0px, -26px, 71px, 75px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'question-right-ring', );
$question-left-ring-name: 'question-left-ring';
$question-left-ring-x: 0px;
$question-left-ring-y: 101px;
$question-left-ring-offset-x: 0px;
$question-left-ring-offset-y: -101px;
$question-left-ring-width: 167px;
$question-left-ring-height: 162px;
$question-left-ring-total-width: 686px;
$question-left-ring-total-height: 1135px;
$question-left-ring-image: '../sprite/sprite_inners.jpg';
$question-left-ring: (0px, 101px, 0px, -101px, 167px, 162px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'question-left-ring', );
$loading-head1-name: 'loading-head1';
$loading-head1-x: 0px;
$loading-head1-y: 263px;
$loading-head1-offset-x: 0px;
$loading-head1-offset-y: -263px;
$loading-head1-width: 686px;
$loading-head1-height: 231px;
$loading-head1-total-width: 686px;
$loading-head1-total-height: 1135px;
$loading-head1-image: '../sprite/sprite_inners.jpg';
$loading-head1: (0px, 263px, 0px, -263px, 686px, 231px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'loading-head1', );
$sunlighe-name: 'sunlighe';
$sunlighe-x: 0px;
$sunlighe-y: 494px;
$sunlighe-offset-x: 0px;
$sunlighe-offset-y: -494px;
$sunlighe-width: 273px;
$sunlighe-height: 237px;
$sunlighe-total-width: 686px;
$sunlighe-total-height: 1135px;
$sunlighe-image: '../sprite/sprite_inners.jpg';
$sunlighe: (0px, 494px, 0px, -494px, 273px, 237px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'sunlighe', );
$shuoye-name: 'shuoye';
$shuoye-x: 0px;
$shuoye-y: 731px;
$shuoye-offset-x: 0px;
$shuoye-offset-y: -731px;
$shuoye-width: 347px;
$shuoye-height: 404px;
$shuoye-total-width: 686px;
$shuoye-total-height: 1135px;
$shuoye-image: '../sprite/sprite_inners.jpg';
$shuoye: (0px, 731px, 0px, -731px, 347px, 404px, 686px, 1135px, '../sprite/sprite_inners.jpg', 'shuoye', );
$spritesheet-width: 686px;
$spritesheet-height: 1135px;
$spritesheet-image: '../sprite/sprite_inners.jpg';
$spritesheet-sprites: ($only-sun, $question-right-ring, $question-left-ring, $loading-head1, $sunlighe, $shuoye, );
$spritesheet: (686px, 1135px, '../sprite/sprite_inners.jpg', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
